/* Auto-generated by genmsg_cpp for file /home/patrizia/ros_workspace/accompany_siena_squeeze_service/srv/AccompanyAction.srv */
#ifndef ACCOMPANY_SIENA_SQUEEZE_SERVICE_SERVICE_ACCOMPANYACTION_H
#define ACCOMPANY_SIENA_SQUEEZE_SERVICE_SERVICE_ACCOMPANYACTION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace accompany_siena_squeeze_service
{
template <class ContainerAllocator>
struct AccompanyActionRequest_ {
  typedef AccompanyActionRequest_<ContainerAllocator> Type;

  AccompanyActionRequest_()
  : action()
  , uid(0)
  {
  }

  AccompanyActionRequest_(const ContainerAllocator& _alloc)
  : action(_alloc)
  , uid(0)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _action_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  action;

  typedef int64_t _uid_type;
  int64_t uid;


private:
  static const char* __s_getDataType_() { return "accompany_siena_squeeze_service/AccompanyActionRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "f286cbf52b406627347ce8f85f9c458f"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "76241cf4ea70a5becc8169ed10e2126a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string action\n\
int64 uid\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, action);
    ros::serialization::serialize(stream, uid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, action);
    ros::serialization::deserialize(stream, uid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(action);
    size += ros::serialization::serializationLength(uid);
    return size;
  }

  typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct AccompanyActionRequest
typedef  ::accompany_siena_squeeze_service::AccompanyActionRequest_<std::allocator<void> > AccompanyActionRequest;

typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionRequest> AccompanyActionRequestPtr;
typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionRequest const> AccompanyActionRequestConstPtr;


template <class ContainerAllocator>
struct AccompanyActionResponse_ {
  typedef AccompanyActionResponse_<ContainerAllocator> Type;

  AccompanyActionResponse_()
  : result(0)
  {
  }

  AccompanyActionResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int64_t _result_type;
  int64_t result;


private:
  static const char* __s_getDataType_() { return "accompany_siena_squeeze_service/AccompanyActionResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "9b05623554ab950ed237d43d45f0b4dd"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "76241cf4ea70a5becc8169ed10e2126a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int64 result\n\
\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct AccompanyActionResponse
typedef  ::accompany_siena_squeeze_service::AccompanyActionResponse_<std::allocator<void> > AccompanyActionResponse;

typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionResponse> AccompanyActionResponsePtr;
typedef boost::shared_ptr< ::accompany_siena_squeeze_service::AccompanyActionResponse const> AccompanyActionResponseConstPtr;

struct AccompanyAction
{

typedef AccompanyActionRequest Request;
typedef AccompanyActionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct AccompanyAction
} // namespace accompany_siena_squeeze_service

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f286cbf52b406627347ce8f85f9c458f";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf286cbf52b406627ULL;
  static const uint64_t static_value2 = 0x347ce8f85f9c458fULL;
};

template<class ContainerAllocator>
struct DataType< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "accompany_siena_squeeze_service/AccompanyActionRequest";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string action\n\
int64 uid\n\
\n\
";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9b05623554ab950ed237d43d45f0b4dd";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x9b05623554ab950eULL;
  static const uint64_t static_value2 = 0xd237d43d45f0b4ddULL;
};

template<class ContainerAllocator>
struct DataType< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "accompany_siena_squeeze_service/AccompanyActionResponse";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 result\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.action);
    stream.next(m.uid);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct AccompanyActionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct AccompanyActionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<accompany_siena_squeeze_service::AccompanyAction> {
  static const char* value() 
  {
    return "76241cf4ea70a5becc8169ed10e2126a";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyAction&) { return value(); } 
};

template<>
struct DataType<accompany_siena_squeeze_service::AccompanyAction> {
  static const char* value() 
  {
    return "accompany_siena_squeeze_service/AccompanyAction";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyAction&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "76241cf4ea70a5becc8169ed10e2126a";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "accompany_siena_squeeze_service/AccompanyAction";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyActionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "76241cf4ea70a5becc8169ed10e2126a";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "accompany_siena_squeeze_service/AccompanyAction";
  }

  static const char* value(const accompany_siena_squeeze_service::AccompanyActionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ACCOMPANY_SIENA_SQUEEZE_SERVICE_SERVICE_ACCOMPANYACTION_H

